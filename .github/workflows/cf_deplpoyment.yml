name: Cloud Formation Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggers

jobs:
  use-iam-identity-center:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Install AWS CLI and AWS SSO Login Tool
    - name: Install AWS CLI
      run: |
        sudo apt-get update && sudo apt-get install -y awscli
        aws --version

    # Step 3: Authenticate with AWS environment variables
    - name: AWS Login
      env:
        AWS_REGION: "us-west-1"
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        AWS_SESSION_TOKEN: ${{secrets.AWS_SESSION_TOKEN}}
        #AWS_SSO_START_URL: ${{ secrets.AWS_SSO_START_URL }}  # Your Identity Center Start URL
        #AWS_SSO_ACCOUNT_ID: ${{ secrets.AWS_SSO_ACCOUNT_ID }}  # Target account ID
        #AWS_SSO_ROLE_NAME: ${{ secrets.AWS_SSO_ROLE_NAME }}  # IAM role in the target account
  
      run: |
        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        export AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
        aws sts get-caller-identity
      
      # Step 4: Validate Cloud Formation template 
    - name: Validate Cloud Formation Template
      run: |
        aws cloudformation validate-template --template-body 

      # Step 5: Deploy Cloud Formation template 
    - name: Deploy Cloud Formation Template 
      run: |
        STACK_NAME='my-resume-cf-stack'
        TEMPLATE_FILE='cloudformation/resume_cf.yaml'
        aws cloudformation deploy\
        --stack-name $STACK_NAME
        --template-file $TEMPLATE_FILE

    # Step6: Collect API outputs
    - name: collect API URL
      run: |
        STACK_NAME='my-resume-cf-stack'
        GET_API_URL='aws cloudformation describe-stacks --stack-name $STACK_NAME\
          --query "Stacks[0].Outputs.GetApiUrl"'
        POST_API_URL=aws cloudformation describe-stacks --stack-name $STACK_NAME\
          --query "Stacks[0].Outputs.PostApiUrl"'

      #Step7: Set up Node.js
    - name: set up Node.js
      uses: actions/setup-node@v2   
      with:
        node-version:'14'

    - name: Install dependencies
      run: npm install

    - name: Run Cypress test 
      run: npx cypress run
        
        
      
